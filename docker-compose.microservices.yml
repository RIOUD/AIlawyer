version: '3.8'

services:
  # Security Service
  security-service:
    build:
      context: .
      dockerfile: services/security/Dockerfile
    container_name: legal-assistant-security
    ports:
      - "127.0.0.1:8001:8001"
    environment:
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - MASTER_PASSWORD=${MASTER_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - SECURITY_HOST=0.0.0.0
      - SECURITY_PORT=8001
      - SECURITY_DEBUG=false
      - SECURITY_LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - ./security:/app/security
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - legal-assistant-network
    depends_on:
      - redis
      - postgres

  # Document Processing Service
  document-processing-service:
    build:
      context: .
      dockerfile: services/document_processing/Dockerfile
    container_name: legal-assistant-document-processing
    ports:
      - "127.0.0.1:8002:8002"
    environment:
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - DOCUMENT_PROCESSING_HOST=0.0.0.0
      - DOCUMENT_PROCESSING_PORT=8002
      - DOCUMENT_PROCESSING_DEBUG=false
      - DOCUMENT_PROCESSING_LOG_LEVEL=INFO
      - VECTOR_STORE_PATH=/app/vector_store
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=mixtral
      - MAX_RETRIEVAL_DOCS=4
    volumes:
      - ./logs:/app/logs
      - ./source_documents:/app/source_documents:ro
      - ./vector_store:/app/vector_store
      - ./uploads:/app/uploads
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - legal-assistant-network
    depends_on:
      - redis
      - postgres
      - ollama

  # Query Processing Service
  query-processing-service:
    build:
      context: .
      dockerfile: services/query_processing/Dockerfile
    container_name: legal-assistant-query-processing
    ports:
      - "127.0.0.1:8003:8003"
    environment:
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - QUERY_PROCESSING_HOST=0.0.0.0
      - QUERY_PROCESSING_PORT=8003
      - QUERY_PROCESSING_DEBUG=false
      - QUERY_PROCESSING_LOG_LEVEL=INFO
      - VECTOR_STORE_PATH=/app/vector_store
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=mixtral
      - MAX_RETRIEVAL_DOCS=4
    volumes:
      - ./logs:/app/logs
      - ./vector_store:/app/vector_store
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - legal-assistant-network
    depends_on:
      - redis
      - postgres
      - ollama

  # Web Interface Service
  web-interface-service:
    build:
      context: .
      dockerfile: services/web_interface/Dockerfile
    container_name: legal-assistant-web-interface
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - WEB_INTERFACE_HOST=0.0.0.0
      - WEB_INTERFACE_PORT=8000
      - WEB_INTERFACE_DEBUG=false
      - WEB_INTERFACE_LOG_LEVEL=INFO
      - SECURITY_SERVICE_URL=http://security-service:8001
      - DOCUMENT_PROCESSING_SERVICE_URL=http://document-processing-service:8002
      - QUERY_PROCESSING_SERVICE_URL=http://query-processing-service:8003
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - legal-assistant-network
    depends_on:
      - security-service
      - document-processing-service
      - query-processing-service

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: legal-assistant-postgres
    environment:
      - POSTGRES_DB=legal_assistant
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "127.0.0.1:5432:5432"
    restart: unless-stopped
    networks:
      - legal-assistant-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: legal-assistant-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure_redis_password}
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - legal-assistant-network

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: legal-assistant-ollama
    ports:
      - "127.0.0.1:11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - legal-assistant-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: legal-assistant-nginx
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - legal-assistant-network
    depends_on:
      - web-interface-service

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: legal-assistant-prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - legal-assistant-network

  grafana:
    image: grafana/grafana:latest
    container_name: legal-assistant-grafana
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - legal-assistant-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  prometheus_data:
  grafana_data:

networks:
  legal-assistant-network:
    driver: bridge 